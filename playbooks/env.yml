---
# 2nd play to be run as service account so root is not used.
- hosts: all
  gather_facts: false
  # this is used to change the ssh user to the one defined in the inventory file
  remote_user: "{{ vars.sshuser.ansible_ssh_user }}"
  vars:
    ansible_ssh_user: "{{ vars.sshuser.ansible_ssh_user }}"
    ansible_become_password: "{{ vars.sshuser.ansible_ssh_user_password }}"
    ansible_become_pass: "{{ vars.sshuser.ansible_ssh_user_password }}"
    ansible_sudo_pass: "{{ vars.sshuser.ansible_ssh_user_password }}"
    # use relative path to the ssh key within this repository
    ansible_ssh_private_key_file: "{{ inventory_dir }}/../accounts/ssh/{{ sshuser.ansible_ssh_private_key_file }}"
    # use ssh user name to set the environment file location
    env_location: "/home/{{ sshuser.ansible_ssh_user}}/.env.{{ hostvars[inventory_hostname].environment }}"
    # set a global NODE_ENV environment variable for the host
    NODE_ENV: "{{ hostvars[inventory_hostname].environment }}"

  tasks:

    # include the vars file for the host by using relative path and the `environment` which is set in the inventory file
    - include_vars: "{{ inventory_dir }}/../vars/{{ hostvars[inventory_hostname].environment }}/{{ inventory_hostname }}.yml"

    - debug: var="vars.sshuser.ansible_ssh_user_password"
    - debug: var="vars.sshuser.ansible_ssh_user"
    - debug: var="env_location"

    - name: Create an env file using the env_file set for this host
      lineinfile:
        path: "{{ env_location }}"
        create: yes
        state: present
        line: "{{ item.key }}={{ item.value}}"
        regexp: "^{{ item.key }}="
        insertafter: EOF
      with_items:
        - "{{ hostvars[inventory_hostname].env_file | dict2items }}"

    - debug: var="ansible_become_pass"
    - debug: var="ansible_sudo_pass"

    - name: Ensure docker deamon is running
      become: yes
      become_method: sudo
      service:
        name: docker
        state: started

    - name: Copy the docker compose file to the server
      ansible.builtin.copy:
        src: "{{ inventory_dir }}/../docker/docker-compose.yml"
        dest: "/home/{{ sshuser.ansible_ssh_user}}/docker-compose.yml"
        owner: "{{ sshuser.ansible_ssh_user }}"
        group: "{{ sshuser.ansible_ssh_user }}"
        mode: '0755'

    - name: Run `docker-compose up` again
      environment:
        NODE_ENV: "{{ hostvars[inventory_hostname].environment }}"
        MONGO_IMAGE: "{{ hostvars[inventory_hostname].mongo_image_version }}"
      community.docker.docker_compose_v2:
        project_src: "/home/{{ sshuser.ansible_ssh_user}}"
        files: "docker-compose.yml"
        env_files: "{{ env_location }}"
      register: output

    - debug: var=output
